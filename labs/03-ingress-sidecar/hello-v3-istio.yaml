apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: hello-v3
  namespace: hello
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        sidecar.istio.io/status: '{"version":"1e8f480eee0d2c455cb96c4acc9a723ca2b4bff32a7837e65787a5ef6853c820","initContainers":["istio-init","enable-core-dump"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"]}'
      creationTimestamp: null
      labels:
        app: hello
        version: v3
    spec:
      containers:
      - env:                                      # image: istio/examples-helloworld-v1
        - name: SERVICE_VERSION
          value: v3
        image: istio/examples-helloworld-v1
        imagePullPolicy: IfNotPresent
        name: helloworld
        ports:
        - containerPort: 5000
        resources: {}
      - args:                                     # image: docker.io/istio/proxy:0.6.0
        - proxy
        - sidecar
        - --configPath
        - /etc/istio/proxy
        - --binaryPath
        - /usr/local/bin/envoy
        - --serviceCluster
        - hello
        - --drainDuration
        - 45s
        - --parentShutdownDuration
        - 1m0s
        - --discoveryAddress
        - istio-pilot.istio-system:15003
        - --discoveryRefreshDelay
        - 1s
        #*#- --zipkinAddress
        #*#- zipkin.istio-system:9411
        - --connectTimeout
        - 10s
        #*#- --statsdUdpAddress
        #*#- istio-mixer.istio-system:9125
        - --proxyAdminPort
        - "15000"
        - --controlPlaneAuthPolicy
        - NONE
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy:0.6.0
        imagePullPolicy: IfNotPresent
        name: istio-proxy
        resources: {}
        securityContext:
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 1337
        volumeMounts:
        - mountPath: /etc/istio/proxy
          name: istio-envoy
        - mountPath: /etc/certs/
          name: istio-certs
          readOnly: true
      initContainers:
      - args:                                       # image: docker.io/istio/proxy_init:0.6.0
        - -p
        - "15001"
        - -u
        - "1337"
        image: docker.io/istio/proxy_init:0.6.0
        imagePullPolicy: IfNotPresent
        name: istio-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
      - args:                                       # image: alpine
        - -c
        - sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t && ulimit -c
          unlimited
        command:
        - /bin/sh
        image: alpine
        imagePullPolicy: IfNotPresent
        name: enable-core-dump
        resources: {}
        securityContext:
          privileged: true
      serviceAccountName: hello-sa
      volumes:
      - emptyDir:
          medium: Memory
        name: istio-envoy
      - name: istio-certs
        secret:
          optional: true
          secretName: istio.hello-sa
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: hello-v3-svc-np
  labels:
    app: hello
    version: v3
  namespace: hello
spec:
  type: NodePort
  ports:
  - name: http
    port: 5040
    targetPort: 5000
  selector:
    app: hello
    version: v3
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-v3-ing
  labels:
    app: hello
    version: v3
  annotations:
    kubernetes.io/ingress.class: istio
  namespace: hello
spec:
  rules:
  - host: v3.helloworld.com
    http:
      paths:
      - path: /hello
        backend:
          serviceName: hello-v3-svc-np
          servicePort: 5040
---
